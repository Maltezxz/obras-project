// Cole este c√≥digo no console do navegador (F12) para debug r√°pido

console.log('üîç DEBUG R√ÅPIDO DO LOGIN');
console.log('========================');

// 1. Verificar vari√°veis de ambiente
console.log('\n1. Vari√°veis de ambiente:');
console.log('URL:', import.meta.env.VITE_SUPABASE_URL);
console.log('Key:', import.meta.env.VITE_SUPABASE_ANON_KEY ? '‚úÖ OK' : '‚ùå FALTANDO');

// 2. Testar conex√£o
if (import.meta.env.VITE_SUPABASE_URL && import.meta.env.VITE_SUPABASE_ANON_KEY) {
  const { createClient } = window.supabase;
  const supabase = createClient(
    import.meta.env.VITE_SUPABASE_URL,
    import.meta.env.VITE_SUPABASE_ANON_KEY
  );
  
  console.log('\n2. Testando conex√£o...');
  
  // 3. Verificar usu√°rio na tabela
  supabase.from('users')
    .select('*')
    .eq('cnpj', '89.263.465/0001-49')
    .eq('name', 'danilo')
    .maybeSingle()
    .then(({ data, error }) => {
      if (error) {
        console.error('‚ùå Erro na tabela users:', error);
      } else if (data) {
        console.log('‚úÖ Usu√°rio na tabela:', data);
        
        // 4. Testar login
        console.log('\n3. Testando login...');
        supabase.auth.signInWithPassword({
          email: data.email,
          password: '123'
        }).then(({ data: authData, error: authError }) => {
          if (authError) {
            console.error('‚ùå Erro no login:', authError);
            console.log('üí° SOLU√á√ÉO: Criar usu√°rio no Supabase Auth');
          } else {
            console.log('‚úÖ Login OK!', authData.user);
          }
        });
      } else {
        console.error('‚ùå Usu√°rio n√£o encontrado na tabela');
      }
    });
} else {
  console.error('‚ùå Configure o arquivo .env primeiro!');
}
